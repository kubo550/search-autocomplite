{"version":3,"sources":["state/user/userReducer.ts","state/rootReducer.ts","components/Loading/Loading.module.scss","components/SearchAutocomplete/AutocompleteList/AutocompleteList.module.scss","components/Error/Error.module.scss","components/UsersList/UsersList.module.scss","state/user/userActions.ts","components/SearchAutocomplete/SearchAutocomplete.module.scss","components/SubmitSearchBtn/SubmitSearchBtn.module.scss","components/SearchAutocomplete/Button/Button.module.scss","components/SearchAutocomplete/Input/Input.module.scss","state/user/userTypes.ts","components/Loading/Loading.tsx","assets/error.svg","components/Error/Error.tsx","utils/containsNotAllowedChars.ts","utils/scrollTo.ts","utils/getHighlightedHTML.ts","components/SearchAutocomplete/SearchAutocomplete.tsx","components/SubmitSearchBtn/SubmitSearchBtn.tsx","hooks/usePagination.ts","components/UsersList/UsersList.tsx","components/SearchAutocomplete/Button/Button.tsx","components/SearchAutocomplete/Input/Input.tsx","components/SearchAutocomplete/AutocompleteList/AutocompleteList.tsx","App.tsx","api/index.ts","state/store.ts","index.tsx"],"names":["initialState","loading","users","error","reducer","state","action","type","USERS","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","payload","FETCH_USERS_FAIL","rootReducer","combineReducers","user","userReducer","module","exports","fetchUsersRequest","dispatch","fetchUsersSuccess","fetchUsersFailure","Loading","className","styles","container","loader","loading_text","refresh","document","location","reload","Error","src","errorImg","img","alt","onClick","containsNotAllowedChars","text","letters","invalidChars","some","letter","includes","scrollTo","list","idx","current","currEl","childNodes","offsetTop","toInnerHTML","__html","getHighlightedHTML","wholeText","searchingText","regex","RegExp","hightlighted","replace","e","SearchAutocomplete","data","useState","setSearchingText","isPopupOpen","setisPopupOpen","searchByName","setSearchByName","curIdx","setCurIdx","userList","useRef","key","currentUsersList","filter","el","test","toogleSearchingKey","useCallback","prev","handleKeydown","len","length","activeElement","blur","useEffect","addEventListener","removeEventListener","search_container","onChange","target","value","togglePopup","isOpen","onBlur","resetInput","mouseLeave","ref","dataKey","mouseEnter","SubmitSearchBtn","memo","submit_btn","title","aria-label","usePagination","limit","numOfPages","Math","ceil","currentPage","console","log","splice","getCurrentPage","changePage","tHeaders","UsersList","table","cellPadding","cellSpacing","thead","map","td","th","tr","style","textAlign","name","email","address","city","company","id","pagination","button","Array","fill","_","cn","active","Button","children","Input","hasFocus","sethasFocus","input","handleKeyDown","focus","click","handleFocus","handleBlur","placeholder","search_input","onFocus","AutocompleteList","forwardRef","search_list","overflowY","onMouseLeave","isCurrent","backgroundColor","color","list_element","onMouseEnter","dangerouslySetInnerHTML","no_result","App","useDispatch","useSelector","bindActionCreators","actionCreators","a","axios","get","response","message","fetchUsers","userNames","username","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d53ea1c6.chunk.js","sourcesContent":["import USERS from \"./userTypes\";\r\nimport { User } from \"types/UserApi\";\r\nimport { Action } from \"./actions_types\";\r\n\r\ninterface UserState {\r\n  loading: boolean;\r\n  users: User[];\r\n  error: null | string;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  loading: true,\r\n  users: [],\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case USERS.FETCH_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case USERS.FETCH_USERS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        users: action.payload,\r\n        error: null,\r\n      };\r\n    case USERS.FETCH_USERS_FAIL:\r\n      return {\r\n        loading: false,\r\n        users: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport userReducer from \"./user/userReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer;\r\n\r\nexport type State = ReturnType<typeof rootReducer>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__ifAg_\",\"loader\":\"Loading_loader__1UNbf\",\"animate\":\"Loading_animate__2qxPQ\",\"loading_text\":\"Loading_loading_text__9XYnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_list\":\"AutocompleteList_search_list__uGYHS\",\"no_result\":\"AutocompleteList_no_result__2BVWM\",\"list_element\":\"AutocompleteList_list_element__8qgfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error_container__1AtNj\",\"img\":\"Error_img__2A_an\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UsersList_container__17-QF\",\"table\":\"UsersList_table__3b2af\",\"thead\":\"UsersList_thead__15EGd\",\"th\":\"UsersList_th__nuQKK\",\"tr\":\"UsersList_tr__37lu6\",\"td\":\"UsersList_td__N1II_\",\"pagination\":\"UsersList_pagination__U7LaH\",\"button\":\"UsersList_button__3T0JL\",\"active\":\"UsersList_active__1IkOl\"};","import USERS from \"./userTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Action } from \"./actions_types\";\r\nimport { User } from \"types/UserApi\";\r\n\r\nexport const fetchUsersRequest = () => {\r\n  return (dispatch: Dispatch<Action>) =>\r\n    dispatch({\r\n      type: USERS.FETCH_USERS_REQUEST,\r\n    });\r\n};\r\n\r\nexport const fetchUsersSuccess = (users: User[]) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: USERS.FETCH_USERS_SUCCESS,\r\n      payload: users,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchUsersFailure = (error: string) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: USERS.FETCH_USERS_FAIL,\r\n      payload: error,\r\n    });\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_container\":\"SearchAutocomplete_search_container__1MphT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit_btn\":\"SubmitSearchBtn_submit_btn__32VYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2x89E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_input\":\"Input_search_input__lpAlK\"};","enum USERS {\r\n    FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST',\r\n    FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS',\r\n    FETCH_USERS_FAIL = 'FETCH_USERS_FAIL'\r\n}\r\n\r\nexport default USERS","import styles from \"./Loading.module.scss\";\r\n\r\nconst Loading = () => (\r\n  <div className={styles.container}>\r\n    <div className={styles.loader}>\r\n      <span></span>\r\n    </div>\r\n    <p className={styles.loading_text}>Loading...</p>\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/error.532ea75d.svg\";","import type { FC } from \"react\";\r\nimport styles from \"./Error.module.scss\";\r\nimport errorImg from \"assets/error.svg\";\r\n\r\ninterface ErrorProps {\r\n  error: string;\r\n}\r\n\r\nconst refresh = () => {\r\n  document.location.reload();\r\n};\r\n\r\nconst Error: FC<ErrorProps> = ({ error }) => (\r\n  <div className={styles.container}>\r\n    <img src={errorImg} className={styles.img} alt='Error' />\r\n    <h3> Sorry, We have an error. Please try again later.</h3>\r\n    <p> {error} </p>\r\n    <button onClick={refresh}> Refresh </button>\r\n  </div>\r\n);\r\n\r\nexport default Error;\r\n","const containsNotAllowedChars = (text: string) => {\r\n    const letters = [...text];\r\n    const invalidChars = [\"\\\\\", \"[\", \"]\", \"*\"];\r\n    return letters.some(letter => invalidChars.includes(letter));\r\n};\r\n\r\nexport default containsNotAllowedChars","const scrollTo = (list: React.RefObject<HTMLDivElement>, idx: number) => {\r\n  if (!list.current) {\r\n    return;\r\n  }\r\n  const currEl = list.current.childNodes[idx] as HTMLElement;\r\n  list.current.scrollTo(0, currEl.offsetTop);\r\n};\r\n\r\nexport default scrollTo","const toInnerHTML = (text: string) => ({ __html: text });\r\n\r\nconst getHighlightedHTML = (wholeText: string, searchingText: string) => {\r\n\r\n    if (!searchingText) {\r\n        return toInnerHTML(wholeText);\r\n    }\r\n\r\n    const regex = new RegExp(searchingText, \"i\");\r\n    const hightlighted = wholeText.replace(regex, e => `<b>${e}</b>`);\r\n\r\n    return toInnerHTML(hightlighted);\r\n};\r\n\r\nexport default getHighlightedHTML","// prettier-ignore\r\nimport React, {  useCallback, useRef, useState, useEffect, FC} from \"react\";\r\nimport styles from \"./SearchAutocomplete.module.scss\";\r\nimport { containsNotAllowedChars, scrollTo } from \"utils\";\r\nimport { Button, Input, AutocompleteList } from \"components\";\r\nimport { UserName } from \"types/UserApi\";\r\n\r\ninterface SearchProps {\r\n  data: UserName[];\r\n}\r\n\r\nconst SearchAutocomplete: FC<SearchProps> = ({ data }) => {\r\n  const [searchingText, setSearchingText] = useState(\"\");\r\n  const [isPopupOpen, setisPopupOpen] = useState(false);\r\n  const [searchByName, setSearchByName] = useState(true);\r\n  const [curIdx, setCurIdx] = useState<null | number>(null);\r\n  const userList = useRef<HTMLDivElement>(null);\r\n\r\n  const key = searchByName ? \"name\" : \"username\";\r\n\r\n  const regex = new RegExp(searchingText, \"gi\");\r\n\r\n  const currentUsersList = data.filter(el => regex.test(el[key]));\r\n\r\n  const toogleSearchingKey = useCallback(() => {\r\n    setSearchByName(prev => !prev);\r\n    setSearchingText(\"\");\r\n  }, []);\r\n\r\n  const handleKeydown = useCallback(\r\n    (e: KeyboardEvent) => {\r\n      const len = currentUsersList.length;\r\n      if (!len) {\r\n        return;\r\n      }\r\n      switch (e.key) {\r\n        case \"ArrowUp\":\r\n          if (!curIdx) {\r\n            setCurIdx(len - 1);\r\n            scrollTo(userList, len - 1);\r\n          } else {\r\n            scrollTo(userList, curIdx - 1);\r\n            setCurIdx(prev => prev! - 1);\r\n          }\r\n          break;\r\n        case \"ArrowDown\":\r\n          if (curIdx === null || curIdx === len - 1) {\r\n            setCurIdx(0);\r\n            scrollTo(userList, 0);\r\n          } else {\r\n            scrollTo(userList, curIdx + 1);\r\n            setCurIdx(prev => (prev !== null ? prev + 1 : 0));\r\n          }\r\n          break;\r\n        case \"Enter\":\r\n          if (curIdx === null || curIdx >= len) {\r\n            return;\r\n          }\r\n          setSearchingText(currentUsersList[curIdx][key]);\r\n          setisPopupOpen(false);\r\n\r\n          (document.activeElement as HTMLElement).blur();\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    },\r\n\r\n    [curIdx, currentUsersList, key]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isPopupOpen) {\r\n      setCurIdx(null);\r\n    } else {\r\n      document.addEventListener(\"keydown\", handleKeydown);\r\n    }\r\n\r\n    return () => document.removeEventListener(\"keydown\", handleKeydown);\r\n  }, [isPopupOpen, handleKeydown, curIdx, currentUsersList, key]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const text = e.target.value;\r\n\r\n    if (containsNotAllowedChars(text)) {\r\n      return;\r\n    } else if (text !== \"/\") {\r\n      setSearchingText(text);\r\n    }\r\n\r\n    setCurIdx(null);\r\n    setisPopupOpen(true);\r\n  };\r\n\r\n  const handleInputBlur = () =>\r\n    curIdx !== null && setSearchingText(currentUsersList[curIdx][key]);\r\n\r\n  const handleMouseLeave = () => {\r\n    setCurIdx(null);\r\n    scrollTo(userList, 0);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.search_container}>\r\n      <Button onClick={toogleSearchingKey}>By {key}</Button>\r\n\r\n      <Input\r\n        searchingText={searchingText}\r\n        onChange={handleInputChange}\r\n        togglePopup={(isOpen: boolean) => setisPopupOpen(isOpen)}\r\n        onBlur={handleInputBlur}\r\n        resetInput={() => setSearchingText(\"\")}\r\n      />\r\n\r\n      {isPopupOpen && (\r\n        <AutocompleteList\r\n          searchingText={searchingText}\r\n          mouseLeave={handleMouseLeave}\r\n          list={currentUsersList}\r\n          ref={userList}\r\n          curIdx={curIdx}\r\n          dataKey={key}\r\n          mouseEnter={(idx: number) => setCurIdx(idx)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchAutocomplete;\r\n","import { memo } from \"react\";\r\nimport styles from \"./SubmitSearchBtn.module.scss\";\r\n\r\nconst SubmitSearchBtn = memo(() => (\r\n  <button className={styles.submit_btn} title='Search' aria-label='Search'>\r\n    <i className='fas fa-search'></i>\r\n  </button>\r\n));\r\n\r\nexport default SubmitSearchBtn;\r\n","import { useState } from \"react\";\r\n\r\nconst getCurrentPage = <T>(data: T[], curIdx: number, limit: number) => {\r\n  console.log(curIdx * limit, limit);\r\n\r\n  return [...data].splice(curIdx * limit, limit);\r\n};\r\n\r\nconst usePagination = <T>(data: T[], limit: number) => {\r\n  const numOfPages = Math.ceil(data.length / limit);\r\n\r\n  const [curIdx, setCurIdx] = useState(0);\r\n\r\n  const changePage = (idx: number | \"next\" | \"prev\" | \"first\" | \"last\") => {\r\n    if (typeof idx === \"number\") {\r\n      setCurIdx(idx);\r\n    } else if (idx === \"first\") {\r\n      setCurIdx(0);\r\n    } else if (idx === \"last\") {\r\n      setCurIdx(numOfPages - 1);\r\n    } else if (idx === \"next\") {\r\n      if (curIdx <= numOfPages - 2) {\r\n        setCurIdx(prev => prev + 1);\r\n      }\r\n    } else if (idx === \"prev\") {\r\n      if (curIdx >= 1) {\r\n        setCurIdx(prev => prev - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const currentPage = getCurrentPage(data, curIdx, limit);\r\n\r\n  return { currentPage, numOfPages, changePage, curIdx };\r\n};\r\nexport default usePagination;\r\n","import { usePagination } from \"hooks\";\r\nimport type { FC } from \"react\";\r\nimport type { User } from \"types/UserApi\";\r\nimport styles from \"./UsersList.module.scss\";\r\nimport cn from \"classnames\";\r\n\r\ninterface UsersListProps {\r\n  users: User[];\r\n}\r\n\r\nconst tHeaders = [\"#\", \"Name\", \"Email\", \"Adress\", \"Company\"] as const;\r\n\r\nconst maxUsersPerPage = 3;\r\n\r\nconst UsersList: FC<UsersListProps> = ({ users }) => {\r\n  const { currentPage, changePage, numOfPages, curIdx } = usePagination(\r\n    users,\r\n    maxUsersPerPage\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <table className={styles.table} cellPadding='0' cellSpacing='0'>\r\n        <thead className={styles.thead}>\r\n          <tr>\r\n            {tHeaders.map(td => (\r\n              <td key={td} className={styles.th}>\r\n                {td}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {currentPage.map((user, idx) => (\r\n            <tr key={user.id} className={styles.tr}>\r\n              <td style={{ textAlign: \"center\" }}> {idx + 1}. </td>\r\n              <td> {user.name} </td>\r\n              <td> {user.email} </td>\r\n              <td> {user.address.city} </td>\r\n              <td> {user.company.name} </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className={styles.pagination}>\r\n        <button className={styles.button} onClick={() => changePage(\"first\")}>\r\n          &lt;&lt;\r\n        </button>\r\n        <button className={styles.button} onClick={() => changePage(\"prev\")}>\r\n          &lt;\r\n        </button>\r\n\r\n        {Array(numOfPages)\r\n          .fill(null)\r\n          .map((_, idx) => (\r\n            <button\r\n              onClick={() => changePage(idx)}\r\n              className={cn(styles.button, idx === curIdx && styles.active)}\r\n              key={idx}\r\n            >\r\n              {idx + 1}\r\n            </button>\r\n          ))}\r\n        <button className={styles.button} onClick={() => changePage(\"next\")}>\r\n          &gt;\r\n        </button>\r\n        <button className={styles.button} onClick={() => changePage(\"last\")}>\r\n          &gt;&gt;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import { FC, memo } from \"react\";\r\nimport styles from \"./Button.module.scss\";\r\n\r\ninterface ButtonProps {\r\n  onClick: () => void;\r\n}\r\n\r\nconst Button: FC<ButtonProps> = memo(({ children, onClick }) => (\r\n  <button\r\n    className={styles.button}\r\n    onClick={onClick}\r\n    title='Toggle searching value'\r\n    aria-label='Toggle searching value'\r\n  >\r\n    {children}\r\n  </button>\r\n));\r\n\r\nexport default Button;\r\n","import { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./Input.module.scss\";\r\n\r\ninterface InputProps {\r\n  searchingText: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  togglePopup: (isOpen: boolean) => void;\r\n  onBlur: () => void;\r\n  resetInput: () => void;\r\n}\r\n\r\nconst Input: FC<InputProps> = ({\r\n  searchingText,\r\n  onChange,\r\n  togglePopup,\r\n  onBlur,\r\n  resetInput,\r\n}) => {\r\n  const [hasFocus, sethasFocus] = useState(false);\r\n  const input = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === \"/\") {\r\n        input.current?.focus();\r\n        input.current?.click();\r\n        resetInput();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [resetInput]);\r\n\r\n  const handleFocus = useCallback(() => {\r\n    togglePopup(true);\r\n    sethasFocus(true);\r\n  }, [togglePopup]);\r\n\r\n  const handleBlur = useCallback(() => {\r\n    onBlur();\r\n    togglePopup(false);\r\n    sethasFocus(false);\r\n  }, [onBlur, togglePopup]);\r\n\r\n  return (\r\n    <input\r\n      type='search'\r\n      placeholder={hasFocus ? \"Search For Users\" : 'Press \"/\" to focus'}\r\n      aria-label='Search'\r\n      className={styles.search_input}\r\n      ref={input}\r\n      value={searchingText}\r\n      onChange={onChange}\r\n      onFocus={handleFocus}\r\n      onClick={handleFocus}\r\n      onBlur={handleBlur}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { FC, forwardRef, LegacyRef } from \"react\";\r\nimport styles from \"./AutocompleteList.module.scss\";\r\nimport { getHighlightedHTML } from \"utils\";\r\nimport { UserName } from \"types/UserApi\";\r\n\r\ninterface AutocompleteListProps {\r\n  searchingText: string;\r\n  mouseLeave: () => void;\r\n  list: UserName[];\r\n  curIdx: number | null;\r\n  mouseEnter: (idx: number) => void;\r\n  dataKey: \"username\" | \"name\";\r\n  ref: any;\r\n}\r\n\r\nconst AutocompleteList: FC<AutocompleteListProps> = forwardRef(\r\n  (\r\n    { list, curIdx, mouseEnter, dataKey, searchingText, mouseLeave },\r\n    ref: LegacyRef<HTMLDivElement> | undefined\r\n  ) => (\r\n    <div\r\n      ref={ref}\r\n      className={styles.search_list}\r\n      style={{ overflowY: list.length > 3 ? \"scroll\" : \"auto\" }}\r\n      onMouseLeave={mouseLeave}\r\n    >\r\n      {list.map((data, idx) => {\r\n        const isCurrent = idx === curIdx;\r\n        const backgroundColor = isCurrent ? \"#cc98c7\" : \"#BC7DB6\";\r\n        const color = isCurrent ? \"#000\" : \"#424242\";\r\n\r\n        return (\r\n          <div\r\n            key={data.id}\r\n            style={{ backgroundColor, color }}\r\n            className={styles.list_element}\r\n            onMouseEnter={() => mouseEnter(idx)}\r\n          >\r\n            <div\r\n              dangerouslySetInnerHTML={getHighlightedHTML(\r\n                data[dataKey],\r\n                searchingText\r\n              )}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      {list.length === 0 && (\r\n        <div className={styles.no_result}> No Results </div>\r\n      )}\r\n    </div>\r\n  )\r\n);\r\n\r\nexport default AutocompleteList;\r\n","import { useEffect } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// prettier-ignore\nimport { Error, Loading, SearchAutocomplete, SubmitBtn, UsersList} from \"components\";\nimport { Action, State } from \"state\";\nimport { UserName, User } from \"types/UserApi\";\nimport { fetchUsers } from \"api\";\n\nconst getUsersNames = (data: User[]): UserName[] =>\n  data.map(({ id, name, username }) => ({ id, name, username }));\n\nconst App = () => {\n  const dispatch = useDispatch<Dispatch<Action>>();\n  const { error, users, loading } = useSelector((state: State) => state.user);\n\n  useEffect(() => {\n    fetchUsers(dispatch);\n  }, [dispatch]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    return <Error error={error} />;\n  }\n\n  const userNames = getUsersNames(users);\n\n  return (\n    <div className='app'>\n      <div className='search-container'>\n        <SearchAutocomplete data={userNames} />\n        <SubmitBtn />\n      </div>\n\n      <UsersList users={users} />\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\r\nimport { Dispatch, bindActionCreators } from \"redux\";\r\nimport { actionCreators, Action } from \"state\";\r\nimport { User } from \"types/UserApi\";\r\n\r\nconst endpoint = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\nexport const fetchUsers = (dispatch: Dispatch<Action>) => {\r\n  const { fetchUsersFailure, fetchUsersRequest, fetchUsersSuccess } =\r\n    bindActionCreators(actionCreators, dispatch);\r\n\r\n  fetchUsersRequest();\r\n\r\n  return (async () => {\r\n    try {\r\n      const response = await axios.get(endpoint);\r\n      const users = response.data as User[];\r\n      fetchUsersSuccess(users);\r\n    } catch (error) {\r\n      fetchUsersFailure(error.message);\r\n    }\r\n  })();\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    {},\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}